$Id$

ratbox-services installation guide
----------------------------------

1. Decide which services you dont want compiled in.  By default all 
   will be compiled in, as they can be disabled in the config file.
   These can be listed via ./configure --help

2. Ensure you have a grammar/lexical parser installed.  Bison and flex are
   recommended, though yacc and lex should do.

3. ratbox-services uses SQLite for storing the database.  SQLite is simply
   a database interface to a normal file -- it does not run as a seperate
   daemon.  ratbox-services requires version 2.x of sqlite, it will not
   work with version 3.x.

   If the configure script cannot find sqlite installed, it will build it
   itself.  You may also force it to be built via the --with-sqlitebuild
   option, this is useful when the system-wide install is sqlite 3.x but
   is picked up by configure:
   	./configure [other options] --with-sqlitebuild

   You may prefer to have sqlite installed system wide.  If that is the case, 
   you should download sqlite version 2.x and install it yourself from:
	   http://www.sqlite.org/download.html

   If sqlite is installed system wide but configure does not find it, and
   you want to use the system version instead, you may use:
   	./configure [other options] --with-sqlite=PATH
   configure will search PATH/include and PATH/lib for the needed sqlite
   parts.

   The sqlite included here is NOT suitable for installation system wide, 
   only for building ratbox-services.  See sqlite/README_RATBOX for more
   information.

4. Run the configure script.  By default it will attempt to install to
   /usr/local/ratbox-services.  If you want it in this directory, then
   as root you must first:
   	mkdir /usr/local/ratbox-services
	chown youruser:yourgroup /usr/local/ratbox-services
   Then install as normal from your username.  Services will not run as
   root, nor should you run make install as root.


   If you wish to install it to a different directory include the 
   --prefix option:
   	./configure --prefix=/home/user/services

   If there are services you dont want compiled in, like the operbot,
   include the relevant option:
   	./configure --disable-operbot

   If SQLite is installed but configure doesnt find it, and you do not
   wish ratbox-services to build sqlite itself:
        ./configure --with-sqlite=PATH
   configure will search PATH/include and PATH/lib for the needed SQLite
   parts.

   If your nick or topic length set in ircd are different to 9 and 160
   respectively, then:
   	./configure --with-nicklen=LENGTH
	./configure --with-topiclen=LENGTH
   where LENGTH is a number.

   See ./configure --help for more information.  Naturally, options should
   be combined so ./configure is only run once.

5. Run make

6. Run make install

7. Change to the directory it installed to.

8. Edit etc/example.conf and save it as etc/ratbox-services.conf.

9. Initialise your database, this must be done even if you are converting
   from hybserv:
	sqlite etc/ratbox-services.db < etc/schema.txt

   If ratbox-services compiled sqlite itself, the sqlite binary can be
   found in PREFIX/bin.

   If you are converting from hybserv, see the website for further
   instructions: http://services.ircd-ratbox.org/

9. On the ircd ratbox-services will connect to, add a connect{} block (or
   C:/N:/H: lines for older ircds). This should have services's server
   name (name in serverinfo{} in ratbox-services.conf) and no autoconnect.
   send_password and accept_password should be equal and flags=encrypted
   should not be used.

10. On all ircds on the network, some configuration may be necessary.
    If you use the ratbox-services compatibility code in ircd-ratbox,
    all servers need service { name = "<ratbox-services's server name>"; };
    If you want to use BanServ, all servers need a shared{} block.

11. Run sbin/ratbox-services

12. Investigate PREFIX/bin/ircd-shortcut.pl if you wish to install command
    shortcuts for your services in your ircd, eg /chanserv etc.



