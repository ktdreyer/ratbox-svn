Overview of the network subsystem
Adrian Chadd <adrian@creative.net.au>

$Id$


This document is an overview of the new and hopefully improved network
subsystem.

The code is based loosely upon the network core found in the Squid web cache
server, with some optimisations for the IO patterns an ircd will have.

Filedescriptor IO is initiated using comm_setselect(). comm_setselect()
registers interest in reading from or writing to a file descriptor.
When a filedescriptor is ready for the required IO a callback is called
from the IO loop.

The comm_setselect() usage is:

void
comm_setselect(int fd, int type, PF *callback, void *cbdata, int timeout)

where:
  fd 		filedescriptor
  type		IO type. Can currently include:
			COMM_SELECT_READ  - register for read
			COMM_SELECT_WRITE - register for write
  callback	Function to call when the FD is ready
  cbdata	Data to be passed to above function
  timeout	Update the timeout value. 0 is "don't update".


A typical use is:

..

/* Register interest in the FD for a read event */
comm_setselect(fd, COMM_SELECT_READ, read_callback, read_data, 0);

..

(FD becomes ready for read in the IO loop)

void
read_callback(int fd, void *data)
{
    /* called when the FD becomes ready for read */
    retval = read(fd, buf, len);

    ..
    /* Ok, we need to read some more when its ready */
    comm_setselect(fd, COMM_SELECT_READ, read_callback, data, 0);
}

